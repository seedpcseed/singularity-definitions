# Generated by: Neurodocker version 0.7.0
# Timestamp: 2021/04/07 18:13:09 UTC
#
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
#
#     https://github.com/ReproNim/neurodocker

Bootstrap: docker
From: debian:stretch

%files
R/prokka.me.R /scripts/prokka.me.R
anvio.yaml

%post
su - root

export ND_ENTRYPOINT="/neurodocker/startup.sh"
apt-get update -qq
apt-get install -y -q --no-install-recommends \
    apt-utils \
    bzip2 \
    ca-certificates \
    curl \
    locales \
    unzip
apt-get clean
rm -rf /var/lib/apt/lists/*
sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
dpkg-reconfigure --frontend=noninteractive locales
update-locale LANG="en_US.UTF-8"
chmod 777 /opt && chmod a+s /opt
mkdir -p /neurodocker
if [ ! -f "$ND_ENTRYPOINT" ]; then
  echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT"
  echo 'set -e' >> "$ND_ENTRYPOINT"
  echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT"
  echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT";
fi
chmod -R 777 /neurodocker && chmod a+s /neurodocker

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    apt-utils \
    bzip2 \
    ca-certificates \
    curl \
    locales \
    wget \
    cmake \
    git \
    python3-pip \
    unzip \
    jellyfish
apt-get clean
rm -rf /var/lib/apt/lists/*

export PATH="/opt/miniconda-4.6.14/bin:$PATH"
echo "Downloading Miniconda installer ..."
conda_installer="/tmp/miniconda.sh"
curl -fsSL --retry 5 -o "$conda_installer" https://repo.continuum.io/miniconda/Miniconda3-4.6.14-Linux-x86_64.sh
bash "$conda_installer" -b -p /opt/miniconda-4.6.14
rm -f "$conda_installer"
conda config --system --prepend channels conda-forge
conda config --system --set auto_update_conda false
conda config --system --set show_channel_urls true
conda config --add channels bioconda
conda config --add channels anaconda
conda config --add channels biocore
conda config --add channels r
sync && conda clean -y --all && sync
conda install -y mamba
mamba env create -f anvio.yaml
mamba install -y -q --name anvio-7 \
    "python=3.6" \
    "mmseqs2" \
    "blast" \
    "diamond" \
    "rapidnj" \
    "fasttree" \
    "ncbi-genome-download" \
    "prokka" \
    "bactopia" \
    "pirate" \
    "roary" \
    "mash" \
    "proteinortho" \
    "pigz=2.6" \
    "hmmer=3.2.1" \
    "bowtie2" \
    "quast" \
    "perl" \
    "fastp" \
    "seqtk" \
    "shovill" \
    "mashtree" \
    "phame" \
    "ngmerge" \
    "quickmerge" \
    "flash" \
    "biopython" \
    "snakemake" \
    "nthits" \
    "ntedit" \
    "blast-plus" \
    "samtools" \
    "sambamba"

mamba install r==3.5.1 r-tidyverse r-ggplot2==3.1.0 r-dplyr==0.7.6 bioconductor-ggtree==1.14.4 r-phangorn==2.4.0 r-gridextra
sync && mamba clean -y --all && sync
bash -c "source activate anvio-7 &&
curl -L https://github.com/merenlab/anvio/releases/download/v7/anvio-7.tar.gz \
        --output anvio-7.tar.gz &&
pip install --no-cache-dir  \
  "setuptools" \
  "ete3" \
  "numpy" \
  "scipy" \
  "pandas" \
  "numba" \
  "anvio-7.tar.gz" \
  "mistune==0.8.4" &&
  anvi-setup-ncbi-cogs --just-do-it -T 28"

cd /
wget https://github.com/marbl/Mash/releases/download/v2.3/mash-Linux64-v2.3.tar
tar -xvf mash-Linux64-v2.3.tar
chmod 777 /mash-Linux64-v2.3/mash

git clone https://github.com/shahab-sarmashghi/Skmer.git
cd /Skmer
python setup.py install

cd /
git clone https://github.com/nsoranzo/sspace_basic

cd /
git clone https://github.com/malonge/RaGOO
cd /RaGOO
python setup.py install

cd /
wget http://cab.spbu.ru/files/release3.15.2/SPAdes-3.15.2-Linux.tar.gz
tar -xzf SPAdes-3.15.2-Linux.tar.gz
chmod 777 /SPAdes-3.15.2-Linux/bin/spades.py

# cd /
# git clone https://github.com/marbl/MetaCompass.git
# cd MetaCompass
# ./install.sh

export CONDA_DIR="/opt/miniconda-4.6.14"
export PATH="/opt/miniconda-4.6.14/bin:/Scripts:$PATH"

rm -rf ~/.cache/pip/*
sync
sed -i '$isource activate anvio-7' $ND_ENTRYPOINT


echo '{
\n  "pkg_manager": "apt",
\n  "instructions": [
\n    [
\n      "base",
\n      "debian:stretch"
\n    ],
\n    [
\n      "user",
\n      "root"
\n    ],
\n    [
\n      "_header",
\n      {
\n        "version": "generic",
\n        "method": "custom"
\n      }
\n    ],
\n    [
\n      "install",
\n      [
\n        "apt-utils",
\n        "bzip2",
\n        "ca-certificates",
\n        "curl",
\n        "locales",
\n        "wget",
\n        "cmake",
\n        "git",
\n        "python3-pip",
\n        "unzip"
\n      ]
\n    ],
\n    [
\n      "miniconda",
\n      {
\n        "version": "4.6.14",
\n        "create_env": "roary_env",
\n        "activate": true,
\n        "conda_install": [
\n          "python=3.6",
\n          "mamba",
\n          "mmseqs2",
\n          "blast",
\n          "diamond",
\n          "rapidnj",
\n          "fasttree",
\n          "ncbi-genome-download",
\n          "prokka",
\n          "bactopia",
\n          "pirate",
\n          "roary",
\n          "mash",
\n          "proteinortho",
\n          "pigz=2.6",
\n          "r==3.5.1",
\n          "r-tidyverse",
\n          "r-ggplot2==3.1.0",
\n          "r-dplyr==0.7.6",
\n          "bioconductor-ggtree==1.14.4",
\n          "r-phangorn==2.4.0",
\n          "r-gridextra"
\n        ],
\n        "pip_install": [
\n          "setuptools",
\n          "ete3",
\n          "numpy",
\n          "scripy",
\n          "pandas",
\n          "numba"
\n        ]
\n      }
\n    ]
\n  ]
\n}' > /neurodocker/neurodocker_specs.json

%environment
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export ND_ENTRYPOINT="/neurodocker/startup.sh"
export CONDA_DIR="/opt/miniconda-4.6.14"
export PATH="/opt/miniconda-4.6.14/bin:/scripts:/sspace_basic:/mash-Linux64-v2.3/Skmer/bin:/SPAdes-3.15.2-Linux/bin:$PATH"

%runscript
/neurodocker/startup.sh "$@"
